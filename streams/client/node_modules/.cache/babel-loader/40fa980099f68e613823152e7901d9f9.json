{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput({\n    input,\n    label\n  }) {\n    return React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, label), React.createElement(\"input\", Object.assign({}, input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    })));\n  }\n\n  onSubmit(formValues) {}\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You need to enter a title';\n  } else if (!formValues.description) {\n    errors.description = 'Yo must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate'\n})(StreamCreate);","map":{"version":3,"sources":["C:\\Users\\danie\\Desktop\\React\\streams\\client\\src\\components\\streams\\StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","onSubmit","formValues","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAgB;AACvB,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,KAAR,CADJ,EAEI,+CAAWD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CADJ;AAOH;;AAEDE,EAAAA,QAAQ,CAACC,UAAD,EAAY,CACnB;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKJ,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKH,WAApC;AAAiD,MAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,MAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ;AAOH;;AAtBsC;;AAyB3C,MAAMQ,QAAQ,GAAIJ,UAAD,IAAgB;AAC7B,QAAMK,MAAM,GAAG,EAAf;;AACA,MAAG,CAACL,UAAU,CAACM,KAAf,EAAqB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,2BAAf;AACH,GAFD,MAEO,IAAG,CAACN,UAAU,CAACO,WAAf,EAA2B;AAC9BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,6BAArB;AACH;;AACD,SAAOF,MAAP;AACH,CARD;;AAUA,eAAeZ,SAAS,CAAC;AAACe,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAAkCd,YAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\nclass StreamCreate extends React.Component {\r\n    renderInput({input, label}){\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{label}</label>\r\n                <input {...input}/>  \r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    onSubmit(formValues){\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\r\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\"/>\r\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\"/>\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {}\r\n    if(!formValues.title){\r\n        errors.title = 'You need to enter a title'\r\n    } else if(!formValues.description){\r\n        errors.description = 'Yo must enter a description'\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({form: 'streamCreate'})(StreamCreate);"]},"metadata":{},"sourceType":"module"}