{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"...Loading\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.stream.title), React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.stream.description));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["C:\\Users\\danie\\Desktop\\React\\streams\\client\\src\\components\\streams\\StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,eAAtC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAIpCC,QAJoC,GAIxBC,UAAD,IAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KANmC;AAAA;;AACpCG,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWV,WAAX,CAAuB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAKDC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEO;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAA1C,CADC,EAED;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKN,KAAL,CAAWK,MAAX,CAAkBE,WAAhD,CAFC,CADJ;AAMA;AAEJ;;AApBmC;;AAuBxC,MAAMC,eAAe,GAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC,SAAO;AACHL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACmB,eAAD,EAAkB;AAAClB,EAAAA;AAAD,CAAlB,CAAP,CAAwCG,UAAxC,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect } from 'react-redux';\r\nimport {fetchStream, editStream} from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n    onSubmit = (formValues) => {\r\n        console.log(formValues)\r\n    };\r\n\r\n    render(){\r\n        if(!this.props.stream){\r\n            return <div>...Loading</div>\r\n        } else {\r\n         return (\r\n             <div>\r\n            <div className=\"title\">{this.props.stream.title}</div>\r\n            <div className=\"description\">{this.props.stream.description}</div>\r\n            </div>\r\n         )   \r\n        }       \r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchStream})(StreamEdit);"]},"metadata":{},"sourceType":"module"}