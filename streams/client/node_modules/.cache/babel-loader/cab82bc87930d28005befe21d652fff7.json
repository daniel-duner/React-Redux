{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Loading\");\n    }\n\n    const _this$props$stream = this.props.stream,\n          title = _this$props$stream.title,\n          description = _this$props$stream.description;\n    return React.createElement(\"div\", {\n      className: \"ui\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.stream.title), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.stream.description));\n  }\n\n}\n\nmapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(null, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["C:\\Users\\danie\\Desktop\\React\\streams\\client\\src\\components\\streams\\StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKJ,KAAL,CAAWK,MAAf,EAAsB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH;;AAHG,+BAKyB,KAAKL,KAAL,CAAWK,MALpC;AAAA,UAKGC,KALH,sBAKGA,KALH;AAAA,UAKUC,WALV,sBAKUA,WALV;AAOJ,WACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWK,MAAX,CAAkBC,KAAvB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWK,MAAX,CAAkBE,WAAvB,CAFJ,CADJ;AAMH;;AAjBoC;;AAoBzCC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACnC,SAAO;AAACL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACH,CAFD;;AAIA,eAAeR,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAA6BC,UAA7B,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchStream } from '../../actions';\r\n\r\nclass StreamShow extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n    render(){\r\n        if(!this.props.stream){\r\n            return <div>Loading</div>;\r\n        }\r\n\r\n        const {title, description} = this.props.stream;\r\n        \r\n        return (\r\n            <div className=\"ui\">\r\n                <h1>{this.props.stream.title}</h1>\r\n                <h5>{this.props.stream.description}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nmapStateToProps = (state, ownProps) => {\r\n    return {stream: state.streams[ownProps.match.params.id]}\r\n}\r\n   \r\nexport default connect(null, {fetchStream})(StreamShow);"]},"metadata":{},"sourceType":"module"}