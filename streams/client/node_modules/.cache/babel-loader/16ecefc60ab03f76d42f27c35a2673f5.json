{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n      history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"...Loading\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Edit a Stream\"), React.createElement(StreamForm, {\n        initialValues: _.pick(this.props.stream, 'title', 'description'),\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:\\Users\\danie\\Desktop\\React\\streams\\client\\src\\components\\streams\\StreamEdit.js"],"names":["_","React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","match","params","id","history","push","componentDidMount","render","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,eAAtC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAIpCC,QAJoC,GAIxBC,UAAD,IAAgB;AACvB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACAK,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACH,KAPmC;AAAA;;AACpCC,EAAAA,iBAAiB,GAAE;AACf,SAAKN,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDI,EAAAA,MAAM,GAAE;AACJ,QAAG,CAAC,KAAKP,KAAL,CAAWQ,MAAf,EAAsB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEO;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADH,EAEG,oBAAC,UAAD;AAAY,QAAA,aAAa,EAAElB,CAAC,CAACmB,IAAF,CAAO,KAAKT,KAAL,CAAWQ,MAAlB,EAAyB,OAAzB,EAAkC,aAAlC,CAA3B;AACA,QAAA,QAAQ,EAAE,KAAKV,QADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CADJ;AAQA;AAEJ;;AAvBmC;;AA0BxC,MAAMY,eAAe,GAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC,SAAO;AACHJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAoDE,UAApD,CAAf","sourcesContent":["import _ from 'lodash';\r\nimport React from 'react';\r\nimport {connect } from 'react-redux';\r\nimport {fetchStream, editStream} from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n    onSubmit = (formValues) => {\r\n        this.props.editStream(this.props.match.params.id, formValues)\r\n        history.push('/');\r\n    };\r\n\r\n    render(){\r\n        if(!this.props.stream){\r\n            return <div>...Loading</div>\r\n        } else {\r\n         return (\r\n             <div>\r\n                <h3>Edit a Stream</h3>\r\n                <StreamForm initialValues={_.pick(this.props.stream,'title', 'description')} \r\n                onSubmit={this.onSubmit}\r\n                />\r\n            </div>\r\n         )   \r\n        }       \r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);"]},"metadata":{},"sourceType":"module"}