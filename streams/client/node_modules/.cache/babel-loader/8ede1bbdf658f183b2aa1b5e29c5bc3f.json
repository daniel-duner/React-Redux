{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\danie\\\\Desktop\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport streams from '../apis/streams';\nimport history from '../history';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await streams.post('/streams', _objectSpread({}, formValues, {\n    userId\n  }));\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"/streams/\".concat(id));\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(\"/streams/\".concat(id), formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(\"(/streams/\".concat(id, \")\"));\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["C:\\Users\\danie\\Desktop\\React\\streams\\client\\src\\actions\\index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAAQC,OAAR,EACQC,QADR,EAEQC,aAFR,EAGQC,aAHR,EAIQC,YAJR,EAKQC,aALR,EAMQC,WANR,QAOW,SAPX;AASA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,QAC9DP,MAD8D,GACpDO,QAAQ,GAAGC,IADyC,CAC9DR,MAD8D;AAErE,QAAMS,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,IAAR,CAAa,UAAb,oBAA6BL,UAA7B;AAAyCL,IAAAA;AAAzC,KAAvB;AACAM,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEP,aAAP;AAAsBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACApB,EAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACF,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAiB;AAC/C,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,CAAY,UAAZ,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAACN,aAAN;AAAqBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACwB,GAAR,oBAAwBE,EAAxB,EAAvB;AACAV,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEL,YAAP;AAAqBM,IAAAA,OAAO,EAAGO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKX,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAAC4B,KAAR,oBAA0BF,EAA1B,GAAgCX,UAAhC,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEH,WAAP;AAAoBI,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMQ,YAAY,GAAIH,EAAD,IAAQ,MAAMV,QAAN,IAAiB;AACjD,QAAMhB,OAAO,CAAC8B,MAAR,qBAA4BJ,EAA5B,OAAN;AACAV,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEJ,aAAP;AAAsBK,IAAAA,OAAO,EAAEc;AAA/B,GAAD,CAAR;AACH,CAHM","sourcesContent":["import streams from '../apis/streams';\r\nimport history from '../history';\r\nimport {SIGN_IN, \r\n        SIGN_OUT, \r\n        CREATE_STREAM,\r\n        FETCH_STREAMS,\r\n        FETCH_STREAM,\r\n        DELETE_STREAM,\r\n        EDIT_STREAM    \r\n    } from './types';\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n   const {userId} = getState().auth;\r\n   const response = await streams.post('/streams', {...formValues, userId});\r\n   dispatch({type: CREATE_STREAM, payload: response.data})\r\n   history.push('/');\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch =>{\r\n    const response = await streams.get('/streams');\r\n    dispatch({type:FETCH_STREAMS, payload: response.data})\r\n};\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`);\r\n    dispatch({type: FETCH_STREAM, payload:  response.data})\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues);\r\n    dispatch({type: EDIT_STREAM, payload: response.data})\r\n};\r\n\r\nexport const deleteStream = (id) => async dispatch =>{\r\n    await streams.delete(`(/streams/${id})`);\r\n    dispatch({type: DELETE_STREAM, payload: id})\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}