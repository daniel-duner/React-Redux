{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderActions = () => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Cancel\"));\n    };\n\n    this.renderContent = () => {\n      if (!this.props.stream) {\n        return 'Are You want to delete this stream?';\n      } else {\n        return \"Are you sure you want to delete the stream with title: \".concat(this.props.stream.title);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"StreamDelete\", React.createElement(Modal, {\n      onDismiss: () => history.push('/'),\n      title: \"Delete Stream\",\n      content: this.renderContent,\n      actions: this.renderActions(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["C:\\Users\\danie\\Desktop\\React\\streams\\client\\src\\components\\streams\\StreamDelete.js"],"names":["React","connect","Modal","history","fetchStream","StreamDelete","Component","renderActions","renderContent","props","stream","title","componentDidMount","match","params","id","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AAAA;AAAA;;AAAA,SAKtCC,aALsC,GAKtB,MAAM;AAClB,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ;AAMH,KAZqC;;AAAA,SActCC,aAdsC,GActB,MAAM;AAClB,UAAG,CAAC,KAAKC,KAAL,CAAWC,MAAf,EAAsB;AAClB,eAAO,qCAAP;AACH,OAFD,MAEO;AACH,gFAAiE,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,KAAnF;AACH;AACJ,KApBqC;AAAA;;AACtCC,EAAAA,iBAAiB,GAAE;AACf,SAAKH,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAmBDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,oBAAC,KAAD;AACI,MAAA,SAAS,EAAE,MAAMb,OAAO,CAACc,IAAR,CAAa,GAAb,CADrB;AAEI,MAAA,KAAK,EAAC,eAFV;AAGI,MAAA,OAAO,EAAE,KAAKT,aAHlB;AAII,MAAA,OAAO,EAAE,KAAKD,aAAL,EAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAWH;;AAlCqC;;AAqC1C,MAAMW,eAAe,GAAI,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAO;AACHV,IAAAA,MAAM,EAAES,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACiB,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,YAAxC,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport {fetchStream} from '../../actions';\r\n\r\nclass StreamDelete extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id)\r\n    }\r\n\r\n    renderActions = () => {\r\n        return(\r\n            <React.Fragment>\r\n                <button className=\"ui button negative\">Delete</button>\r\n                <button className=\"ui button\">Cancel</button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderContent = () => {\r\n        if(!this.props.stream){\r\n            return 'Are You want to delete this stream?';\r\n        } else {\r\n            return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n            StreamDelete\r\n            <Modal\r\n                onDismiss={() => history.push('/')}\r\n                title=\"Delete Stream\"\r\n                content={this.renderContent}\r\n                actions={this.renderActions()}\r\n            />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps =  (state, ownProps) => {\r\n    return({\r\n        stream: state.streams[ownProps.match.params.id]\r\n    })\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchStream})(StreamDelete);"]},"metadata":{},"sourceType":"module"}