{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderAdmin = stream => {\n      console.log(\"stream: \" + stream.userId);\n      console.log(\"user: \" + this.props.currentUserId);\n\n      if (stream.uesrId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"EDIT/DELETE\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: stream.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"large middle aligned icon camera\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, stream.title, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, stream.description)), this.renderAdmin(stream));\n    });\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Streams\"), React.createElement(\"div\", {\n      className: \"ui celled list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:\\Users\\danie\\Desktop\\React\\streams\\client\\src\\components\\streams\\StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","renderAdmin","stream","console","log","userId","props","currentUserId","uesrId","componentDidMount","renderList","streams","map","id","title","description","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,WALqC,GAKvBC,MAAM,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAWF,MAAM,CAACG,MAA9B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAS,KAAKE,KAAL,CAAWC,aAAhC;;AACA,UAAGL,MAAM,CAACM,MAAP,KAAkB,KAAKF,KAAL,CAAWC,aAAhC,EAA8C;AAC1C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;AACJ,KAXoC;AAAA;;AACrCE,EAAAA,iBAAiB,GAAE;AACf,SAAKH,KAAL,CAAWR,YAAX;AACH;;AAUDY,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKJ,KAAL,CAAWK,OAAX,CAAmBC,GAAnB,CAAuBV,MAAM,IAAG;AACnC,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,MAAM,CAACW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,MAAM,CAACY,KADZ,EAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCZ,MAAM,CAACa,WADR,CAFJ,CAFJ,EAQK,KAAKd,WAAL,CAAiBC,MAAjB,CARL,CADJ;AAYH,KAbM,CAAP;AAcH;;AAEDc,EAAAA,MAAM,GAAE;AACJb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWK,OAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKD,UAAL,EAAjC,CAFJ,CADJ;AAMH;;AAtCoC;;AAyCzC,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAQ;AACJP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CADL;AAEJJ,IAAAA,aAAa,EAAEW,KAAK,CAACG,IAAN,CAAWhB;AAFtB,GAAR;AAKH,CAND;;AAQA,eAAeR,OAAO,CAACoB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchStreams} from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin = stream => {\r\n        console.log(\"stream: \"+stream.userId)\r\n        console.log(\"user: \"+this.props.currentUserId)\r\n        if(stream.uesrId === this.props.currentUserId){\r\n            return <div>EDIT/DELETE</div>;\r\n        }\r\n    }\r\n\r\n    renderList(){\r\n        return this.props.streams.map(stream =>{\r\n            return(\r\n                <div className=\"item\" key={stream.id}>\r\n                    <i className=\"large middle aligned icon camera\"/>   \r\n                    <div className=\"content\">\r\n                        {stream.title}\r\n                        <div className=\"description\">\r\n                        {stream.description}\r\n                        </div>\r\n                    </div>\r\n                    {this.renderAdmin(stream)}\r\n                </div>\r\n            ); \r\n        });\r\n    } \r\n\r\n    render(){\r\n        console.log(this.props.streams)\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">{this.renderList()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId\r\n    });\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}